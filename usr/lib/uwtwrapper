#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## $uwtwrapper_parent uwt wrapper.

## If you want to enable/disable uwt and/or privacy
## globally or for certain applications, see /etc/uwt.d/.

## Technical comment:
## - time_privacy is called time_privacy, because this script may get added
##   upstream to the Debian package faketime. This is to avoid a conflict, when
##   the new file timeprivacy gets installed by faketime.

## Debugging.
#set -x

set -o pipefail

SCRIPTNAME="$(basename $0)"

error_handler() {
   echo "
## uwtwrapper BUG.
## SCRIPTNAME: $SCRIPTNAME
## uwtwrapper_parent: $uwtwrapper_parent
## BASH_COMMAND: $BASH_COMMAND
## Please report this BUG!
"
   exit 1
}

trap "error_handler" ERR

sanity_tests_general() {
   if [ ! -e "$uwtwrapper_parent.anondist-orig" ]; then
      local command_v_exit_code="0"
      command -v command-not-found >/dev/null 2>/dev/null || { command_v_exit_code="$?" ; true; };
      if [ ! "$command_v_exit_code" = "0" ]; then
         echo "$SCRIPTNAME uwt wrapper ERROR: $uwtwrapper_parent.anondist-orig does not exist."
         exit 1
      fi
      ## Example basename_uwtwrapper_parent:
      ## /usr/bin/ssh
      basename_uwtwrapper_parent="${uwtwrapper_parent##*/}"
      ## Example basename_uwtwrapper_parent:
      ## ssh
      ## --ignore-installed is used, because the uwt wrapper (for example
      ## /usr/bin/ssh) will already be installed.
      local command_not_found_exit_code="0"
      exec command-not-found --ignore-installed "$basename_uwtwrapper_parent" || { command_not_found_exit_code="$?" ; true; };
      exit "$command_not_found_exit_code"
   fi
   if [ ! -x "$uwtwrapper_parent.anondist-orig" ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $uwtwrapper_parent.anondist-orig is not executable."
      exit 1
   fi
}

sanity_tests_uwt() {
   if [ ! -e $(command -v "uwt") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "uwt") does not exist."
      exit 1
   fi
   if [ ! -x $(command -v "uwt") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "uwt") is not executable."
      exit 1
   fi
   if [ ! -e $(command -v "torsocks") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "torsocks") does not exist."
      exit 1
   fi
   if [ ! -x $(command -v "torsocks") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "torsocks") is not executable."
      exit 1
   fi
}

sanity_tests_timeprivacy() {
   if [ ! -e $(command -v "faketime") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "faketime") does not exist."
      exit 1
   fi
   if [ ! -x $(command -v "faketime") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "faketime") is not executable."
      exit 1
   fi
   if [ ! -e $(command -v "time_privacy") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "faketime") does not exist."
      exit 1
   fi
   if [ ! -x $(command -v "time_privacy") ]; then
      echo "$SCRIPTNAME uwt wrapper ERROR: $(command -v "faketime") is not executable."
      exit 1
   fi
}

## Files in /etc/uwt.d/* set variables such as
## port_aptget, port_gpg, ... and variables such as
## timeprivacy_aptget, timeprivacy_gpg, ... and variables such as
## uwtwrapper_aptget, uwtwrapper_gpg, ... and ip.
for i in /etc/uwt.d/*; do
   if [ -f "$i" ]; then
      ## If the last character is a ~, ignore that file, because it was created
      ## by some editor, which creates backup files.
      if [ "${i: -1}" = "~" ]; then
         continue
      fi
      ## Skipping files such as .dpkg-old and .dpkg-dist.
      if ( echo "$i" | grep -q ".dpkg-" ); then
         true "skip $i"
         continue
      fi
      source "$i"
   fi
done

port="${uwtport["$uwtwrapper_parent"]}"

if [ "${timeprivacy["$uwtwrapper_parent"]}" = "1" ]; then
   fake_time="faketime"
   privacy_time="$("time_privacy" -f "/tmp/timeprivacy_$SCRIPTNAME_CLEANED")"
else
   if [ "$timeprivacy_global" = "1" ]; then
      fake_time="faketime"
      privacy_time="$("time_privacy")"
   else
      fake_time=""
      privacy_time=""
   fi
fi

## Using "|| { exit_code="$?" ; true; };" to prevent invoking error_handler in case
## the executed application exits with a non-zero value.
##
## Bash syntax: command1 || command2
##
## Setting default exit_code="0" beforehand, because
## command2 does only get executed, if command1 exits non-zero.
## So in case it's zero, the default exit_code value must be already set.

if [ "$uwtwrapper_global" = "0" ]; then
   if [ "$fake_time" = "faketime" ]; then
      sanity_tests_general ${1+"$@"}
      sanity_tests_timeprivacy
      exit_code="0"
      exec "$fake_time" "$privacy_time" "$uwtwrapper_parent.anondist-orig" ${1+"$@"} || { exit_code="$?" ; true; };
   else
      sanity_tests_general ${1+"$@"}
      exit_code="0"
      exec "$uwtwrapper_parent.anondist-orig" ${1+"$@"} || { exit_code="$?" ; true; };
   fi
   exit "$exit_code"
fi

if [ "${uwtwrapper["$uwtwrapper_parent"]}" = "0" ]; then
   if [ "$fake_time" = "faketime" ]; then
      sanity_tests_general ${1+"$@"}
      sanity_tests_timeprivacy
      exit_code="0"
      exec "$fake_time" "$privacy_time" "$uwtwrapper_parent.anondist-orig" ${1+"$@"} || { exit_code="$?" ; true; };
   else
      sanity_tests_general ${1+"$@"}
      exit_code="0"
      exec "$uwtwrapper_parent.anondist-orig" ${1+"$@"} || { exit_code="$?" ; true; };
   fi
   exit "$exit_code"
fi

if [ "$fake_time" = "faketime" ]; then
   sanity_tests_general ${1+"$@"}
   sanity_tests_uwt
   sanity_tests_timeprivacy
   exit_code="0"
   exec "$fake_time" "$privacy_time" "/usr/bin/uwt" -t 5 -i "$uwtwrapper_gateway_ip" -p "$port" "$uwtwrapper_parent.anondist-orig" ${1+"$@"} || { exit_code="$?" ; true; };
else
   sanity_tests_general ${1+"$@"}
   sanity_tests_uwt
   exit_code="0"
   exec "/usr/bin/uwt" -t 5 -i "$uwtwrapper_gateway_ip" -p "$port" "$uwtwrapper_parent.anondist-orig" ${1+"$@"} || { exit_code="$?" ; true; };
fi
exit "$exit_code"
